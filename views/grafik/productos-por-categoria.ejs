<div class="chart-container">
    <canvas id="starCanvas" class="star-background"></canvas>
    <div class="stats-container">
        <div class="stat-card">
            <div class="stat-label">Total Productos</div>
            <div class="stat-value"><%= data.totalProducts %></div>
        </div>
    </div>
    <canvas id="categoryChart"></canvas>
</div>

<script>
// Star background configuration
const starCanvas = document.getElementById('starCanvas');
const starCtx = starCanvas.getContext('2d');
let stars = [];

function resizeCanvas() {
    const container = document.querySelector('.chart-container');
    const width = container.offsetWidth;
    const height = container.offsetHeight;
    
    starCanvas.width = width;
    starCanvas.height = height;
    
    createStars();
}

function createStars() {
    stars = [];
    for(let i = 0; i < 100; i++) {
        stars.push({
            x: Math.random() * starCanvas.width,
            y: Math.random() * starCanvas.height,
            size: Math.random() * 2 + 1,
            brightness: Math.random()
        });
    }
}

function drawStars() {
    starCtx.fillStyle = '#0A0203';
    starCtx.fillRect(0, 0, starCanvas.width, starCanvas.height);
    
    stars.forEach(star => {
        star.brightness = Math.sin(Date.now() / 1000 + star.x) * 0.5 + 0.5;
        starCtx.fillStyle = `rgba(255, 107, 53, ${star.brightness * 0.7})`;
        starCtx.fillRect(star.x, star.y, star.size, star.size);
    });
    
    requestAnimationFrame(drawStars);
}

// Initialize star background
resizeCanvas();
drawStars();
window.addEventListener('resize', resizeCanvas);

// Initialize Chart
const ctx = document.getElementById('categoryChart').getContext('2d');
const chart = new Chart(ctx, {
    type: 'bar',
    data: {
        labels: <%- JSON.stringify(data.labels) %>,
        datasets: [{
            label: 'Productos por Categor√≠a',
            data: <%- JSON.stringify(data.values) %>,
            backgroundColor: 'rgba(255, 107, 53, 0.8)',
            borderColor: '#FF6B35',
            borderWidth: 1
        }]
    },
    options: {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
            legend: {
                labels: {
                    color: '#FF6B35'
                }
            }
        },
        scales: {
            y: {
                beginAtZero: true,
                grid: {
                    color: 'rgba(255, 107, 53, 0.1)'
                },
                ticks: {
                    color: '#FF6B35'
                }
            },
            x: {
                grid: {
                    color: 'rgba(255, 107, 53, 0.1)'
                },
                ticks: {
                    color: '#FF6B35'
                }
            }
        }
    }
});
</script>

<style>
body {
    background: #0A0203;
}

.chart-container {
    position: relative;
    height: 80vh;
    width: 95%;
    margin: 20px auto 40px auto; /* Added margin-bottom */
    max-width: 1200px;
}

.star-background {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 0;
}

#categoryChart {
    position: relative;
    z-index: 1;
}

.stats-container {
    position: relative;
    z-index: 1;
    display: flex;
    justify-content: center;
    margin-bottom: 2rem;
}

.stat-card {
    background: rgba(10, 2, 3, 0.9);
    border: 2px solid #FF6B35;
    border-radius: 10px;
    padding: 2rem;
    color: #FF6B35;
    text-align: center;
    box-shadow: 0 0 15px #FF6B35;
    min-width: 250px;
}

.stat-value {
    font-size: 2.5rem;
    font-weight: bold;
    margin: 1rem 0;
    text-shadow: 0 0 10px #FF6B35;
}

.stat-label {
    font-size: 1.2rem;
    opacity: 0.9;
}
</style>

