<div class="chart-container" style="height: 80vh; position: relative;">
    <canvas id="productPriceChart"></canvas>
    <div id="magnifier" class="magnifier"></div>
</div>

<script>
const ctx = document.getElementById('productPriceChart').getContext('2d');
const data = <%- JSON.stringify(data) %>;
const magnifier = document.getElementById('magnifier');

const chart = new Chart(ctx, {
    type: 'bar',
    data: {
        labels: data.map(p => p.name),
        datasets: [{
            label: 'Precio ($)',
            data: data.map(p => p.price),
            backgroundColor: 'rgba(54, 162, 235, 0.8)',
            borderColor: 'rgba(54, 162, 235, 1)',
            borderWidth: 1
        }]
    },
    options: {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
            legend: {
                position: 'top',
            },
            title: {
                display: true,
                text: 'Productos por Precio',
                font: {
                    size: 16
                }
            }
        },
        scales: {
            y: {
                beginAtZero: true,
                title: {
                    display: true,
                    text: 'Precio ($)',
                    font: {
                        size: 14
                    }
                }
            },
            x: {
                title: {
                    display: true,
                    text: 'Productos',
                    font: {
                        size: 14
                    }
                },
                ticks: {
                    maxRotation: 90,
                    minRotation: 90,
                    font: {
                        size: 11
                    },
                    autoSkip: false,
                    callback: function(val) {
                        const label = this.getLabelForValue(val);
                        if (label.length > 15) {
                            return label.match(/.{1,15}/g);
                        }
                        return label;
                    }
                }
            }
        },
        layout: {
            padding: {
                bottom: 100
            }
        },
        onHover: (event, elements) => {
            if (elements && elements.length) {
                const element = elements[0];
                const label = data[element.index].name;
                const rect = event.chart.canvas.getBoundingClientRect();
                const x = event.native.clientX - rect.left;
                const y = event.native.clientY - rect.top;
                
                magnifier.style.display = 'block';
                magnifier.style.left = `${x}px`;
                magnifier.style.top = `${y - 50}px`;
                magnifier.textContent = label;
            } else {
                magnifier.style.display = 'none';
            }
        }
    }
});

// Asegurarse de que el magnificador se oculte cuando el mouse sale del grÃ¡fico
document.querySelector('.chart-container').addEventListener('mouseleave', () => {
    magnifier.style.display = 'none';
});
</script>

<style>
.chart-container {
    margin: 20px auto;
    width: 95%;
    max-width: 1200px;
    position: relative;
}

.magnifier {
    display: none;
    position: absolute;
    background: rgba(0, 0, 0, 0.8);
    color: #FF6B35;
    padding: 8px 12px;
    border-radius: 5px;
    font-size: 16px;
    pointer-events: none;
    z-index: 1000;
    border: 2px solid #FF6B35;
    box-shadow: 0 0 10px #FF6B35;
    white-space: nowrap;
    transform: translateX(-50%);
    font-family: 'Courier New', monospace;
    text-shadow: 0 0 5px #FF6B35;
}

.magnifier::after {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 50%;
    transform: translateX(-50%);
    border-width: 5px;
    border-style: solid;
    border-color: #FF6B35 transparent transparent transparent;
}
</style>

